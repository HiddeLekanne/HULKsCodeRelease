#!/bin/bash

# Get base directory for better referencing
BASEDIR=`cd $(dirname $0); pwd -P`
BASEDIR=${BASEDIR%/*}

if [ -z "$VCPKG_DIR" ]; then
  VCPKG_DIR="${BASEDIR}/../vcpkg"
fi

source "${BASEDIR}/scripts/lib/msg.sh"
source "${BASEDIR}/scripts/lib/docker.sh"


function helpMenu {
  echo "Usage: $0 [OPTIONS]"
  echo ""
  echo "Environment variable: VCPKG_REPO_TARGET_DIR"
  echo "  the folder to clone vcpkg into (defaults to /path/to/nao/../vcpkg)"
  echo "--help"
  echo "  Displays this help"
}

function installPackage {
  ./vcpkg install $1
  if [ "$?" -ne 0 ]; then
    msg -e "Unable to install $1 :("
    return 1
  fi
}

function run {
  # No options supported. Display help
  if [ "$#" -gt 0 ]; then
    helpMenu
    return 1
  fi

  # Either clone vcpkg or fetch existing repos's remote
  if [ ! -e "${VCPKG_DIR}" ]; then
    git clone git@github.com:hulks/vcpkg.git ${VCPKG_DIR}
    if [ "$?" -ne 0 ]; then
      msg -e "Unable to clone vcpkg"
      return 1
    fi
    cd ${VCPKG_DIR}
  else
    cd ${VCPKG_DIR}
    git fetch origin
    if [ "$?" -ne 0 ]; then
      msg -e "Unable to fetch origin for existing vcpkg"
      return 1
    fi
  fi

  # Checkout the correct branch
  git checkout -B hulksModifications origin/hulksModifications
  if [ "$?" -ne 0 ]; then
    msg -e "Unable to checkout opencv branch"
    return 1
  fi

  # Build vcpkg
  ./bootstrap-vcpkg.sh
  if [ "$?" -ne 0 ]; then
    msg -e "Bootstrap was not successful"
    return 1
  fi

  installPackage opencv
  installPackage opusfile
  installPackage portaudio
}

handleDocker "${BASEDIR}" "$@"
